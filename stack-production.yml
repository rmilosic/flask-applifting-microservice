version: '3.1'

services:

  app:
    build: .
    restart: always
    depends_on:
      - db
      - redis
    ports:
      - 5000:5000
    env_file: 
      - ./instance/production.env
    networks:
      - web_nw
      - db_nw
    entrypoint: ["python", "main.py"]
    volumes:
        - .:/usr/src/app:ro
    
  db:
    image: postgres
    restart: always
    env_file:
      - ./instance/production.env
    networks:
      - db_nw
      - web_nw
    ports:
      - 5432:5432

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    env_file:
      - ./instance/production.env
    networks:
      - redis_nw


  worker:
    build: 
      context: .
      dockerfile: Dockerfile-celery
    command: "celery worker -A app.celery_worker.celery -B"
    depends_on:
      - "redis"
      - "app"
      - "db"
    env_file:
      - ./instance/production.env
    volumes:
      - .:/usr/src/app:ro
    networks:
      - db_nw
      - redis_nw

networks:
  db_nw:
    driver: bridge
  web_nw:
    driver: bridge
  redis_nw:
    driver: bridge